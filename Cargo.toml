[package]
authors = ["someone"]
edition = "2018"
readme = "README.md"
name = "wall-e"
version = "0.1.0"

[dependencies]
cortex-m = { version = "0.7.7", features = ["critical-section-single-core"] }
cortex-m-rt = "0.7"
cortex-m-semihosting = "0.5.0"
defmt = "0.3.8"
defmt-rtt = "0.4.1"
embedded-hal = "=0.2.7"
embedded-sdmmc = { version = "0.8.0", default-features = false, features = ["defmt-log"] }
pwm-pca9685 = "1.0.0"
stm32f3xx-hal = { version = "0.10.0", features = ["ld", "rt", "stm32f303xc"] }
shared-bus = "0.3.1"
nb = "1.1.0"
libm = "0.2.8"

# Uncomment for the panic example.
# panic-itm = "0.4.1"

# Uncomment for the allocator example.
# alloc-cortex-m = "0.4.0"

# Uncomment for the device example.
# Update `memory.x`, set target to `thumbv7em-none-eabihf` in `.cargo/config`,
# and then use `cargo build --examples device` to build it.
# [dependencies.stm32f3]
# features = ["stm32f303", "rt"]
# version = "0.7.1"

# this lets you use `cargo fix`!
[[bin]]
name = "wall-e"
test = false
bench = false

[profile.release]
opt-level = 's'
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations

[profile.dev]
opt-level = 0
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations

[profile.dev.package.cortex-m-rt] # +
opt-level = 0 # +
